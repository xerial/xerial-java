Silk format specification: version 1.0.

Taro L. Saito <leo@xerial.org>
November 26th, 2009

= Idea

== Type matching with tab-delimited data

<code>
-gene(name, strand, start, end, cds(start, end), exon(start, end))|
NM_001005277    +       357521  358460  [[357521, 358460]]        [[357521, 358460]]
NM_001005224    +       357521  358460  [[357521, 358460]]        [[357521, 358460]]
</code>

name -> x
strand -> x
start -> x
end -> x
cds(start, end) -> x[y, z]
exon(stat, end) -> x[y, z]

gene(name, strand, start, end, cds(start, end), exon(start, end)) 
-> a(b, c, d, e, f(g, h), i(j, k))



NM_001005277 -> string
+ -> string
357521 -> integer
358460 -> integer
[357521, 358460] -> [interger, integer]
[[357521, 358460]] -> [[integer, integer]]

NM_001005277    +       357521  358460  [357521, 358460]        [[357521, 358460]]
-> (string, string, integer, integer, [integer, integer], [[integer, integer]])

== Tab-separated value expression

T := V | [E]; 
E := T | E,E ;
V := string | integer | double | true | false | null ;


string := utf_char*;

utf_char 
:= any UTF-8 character except \"(double quotation0 or \ (back slash)
 | \ ('\"' quotation mark | '\\' reverse solidus | '/' solidus | 'b' backspace | 'f' formfeed| 'n' newline | 'r' carriage return | 't' horizontal tab | 'u' (4 hexadecimal digits)


== Silk node expression

N := - string ('(' F ')')? 
F := string | string[G] 
G := F | G,G



== matching rules
x : null 
=> (empty)

x : [e1, e2, ...]
=> x:e1, x:[e2, ...]

x : [[e]]
=> x:[e]

x[y, z] : [e1, e2] 
=> x[y:e1, z:e2]

x[y, z]: [[e1, e2, ...]] 
=> x[y, z] : [e1, e2, ...]
=> x[y, z]:e1, x[y, z]:[e2, ...]
 
Examples:
x[y, z] : [integer, integer] 
=> x[y:integer, z:integer]

x[y, z] : [[integer, integer], [integer, integer]] 
=> x[y:integer, z:integer], x[y,z]:[[integer, integer]]



-section: Mixing Table and Tree Structured Data

-species: human
-sequence: hg19

-gene(name, chr, strand, start, end)|
NM_001005277    chr1	 +       357521  358460  
 -cds(start, end)|
 357521	     358460
 -exon(star, end)|
 9907193     9908432
 9909046     9909277
NM_001005224    chr1	+       357521  358460  
 -cds(start, end)|
 357521	     358460
 -exon(star, end)|
 9907193     9908432
 9909046     9909277





= Regular Expression
silk node: (indent "-")(node name) ("(" ((node name) ("," node name)*)? ")")*
 [ ]*-[^(:]*

silk attribute: (node name) ":" (node value) 

silk function: (indent "@") (function name) "(" arg ("," arg)* ")" 

format indicator: 
 (tab) "|" | (contiguous string) ">" | (multi-line string including new lines) ">>" 



inline node

-gene(name:NM_001005277, chr:chr1, strand:+, start:357521, end:358460)
 -cds(start, end)|
 


= considerations
- ordered/unordered:
- scope delimiter:


= Amoeba

-company
 -name: A
 -employee
  -id: 1
  -name: A
  -dept: SEA
 -dept: LA
  -employee
   -id: 2
   -name: B
  -employee
   -id: 3
   -name: C
 -employee
  -id: 4
  -name: D
  -dept: SEA

>chr:chr1
 -gene(start:100, end:10000, strand:+)
 -gene(start:2000, end:103424, strand: -)



= Graph Data

-plot(x, y)*
-2, 4
-1, 10
 0, 23

= No-name node

class MyList extends List<Gene> {
  public String name;
}

-name:A
-(name:gene1, start:1000, end:2000)
-(name:gene2, start:1000, end:2000)
== multiline text
  
(sequence data)

-NM_001005224(chr:chr1, length:40)
 -sequence>
ATGGATGGAGAGAATCACTCAGTGGTATCTGAGTTTTTGTTTCTGGGACTCACTCATTCAT--
\-AGCTCCTCCTCCTAGTGTTTTCCTCTGTGCTCTATGTGGCAAGCATTACTGGAAACATCCT


= Deeply nested data

(with indent)

-track: refseq genes
 -sequence: hg19
  -chr: chr1
   -refgene(name, strand, start, end)|
    NM_001005277    +       357521  358460 
    -cds(start, end)|
     357521     358460
    -exon(star, end)|
     9907193     9908432
     9909046     9909277
    NM_001005224    +       357521  358460  
    -cds(start, end)|
     357521     358460
    -exon(star, end)|
     9907193     9908432
     9909046     9909277


(data node has independent indentation level)	


-track group: global
 -species: human

 -track: refseq genes
  -sequence: hg19
  -chr: chr1
  -refgene(name, strand, start, end)|
NM_001005277    +       357521  358460 
   -cds(start, end)|
 357521     358460
   -exon(star, end)|
 9907193     9908432
 9909046     9909277
NM_001005224    +       357521  358460  
   -cds(start, end)|
 357521     358460
   -exon(star, end)|
 9907193     9908432
 9909046     9909277
 -track: ruler
  -left margin: 100

= Microformat in tab-separated data

-track: refseq genes
 -sequence: hg19
 -chr: chr1
 -refgene(name, strand, start, end, cds(start, end)*, exon(start, end)*)|
NM_001005277    +       357521  358460	[[357521,358460]]	[[9907193,9908432],[9909046,9909277]]
NM_001005224    +       357521  358460	[[357521,358460]]	[[9907193,9908432],[9909046,9909277]]


= Schema

%relation track group(track*) 
%relation gene(cds*, exon*)



= Indexing Silk

== index type
* hash
* b-tree
* ub-tree 


%index (chr[hash], (start, end)[z-order])



